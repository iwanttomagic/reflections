What happens when you initialize a repository? Why do you need to do it?
When you initialize a repository git creates a git repository for all the files in your repository. You
need to do this in order to save commits.

How is the staging area different from the working directory and the repository? What value do you think
it offers?
The staging area is a place where you can gather up files to add to a commit. It only holds one version
each file, unlike the the repository. It only holds the files you wish to commit, unlike the directory.

How can you use the staging area to make sure you have one commit per logical change?
Because it allows you to see what changes you have made.

What are some situations when branches would be helpful in keeping your history organized? How would 
branches help?
Branches would be helpful in keeping my history organized because I could have separate history's for 
different experimental versions of a game. Say I want to add a new feature to a game I am building, but
I am not quite sure about how playable it will be after, I can make a separate branch for the experiment.
This way, if I want to continue to work on the original game, I can checkout to master and everything
is back to normal. 