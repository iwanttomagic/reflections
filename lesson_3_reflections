When would you want to use a remote repository rather than keeping all your work local?
If you wanted to share your project, or if you weren't the only one working on a  project.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date withyour remote
repository?
You would want to pull changes manually because then your commits would make the most logical sense. Leaving git to pull changes
will give you arbitrary commits--they might be too big or too small.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Cloning is where you copy a full directory, forking is where you copy a directory on GitHub onto your own user, and branching
is where you make a version that is seperate from the main branch so you can make changes without breaking the main project.
You would clone something if you wanted two coppies of a directory in different places on a computer, you would fork if you
wanted to work on a project that someone else started, and you would branch if you wanted to implement experimental changes
on a project without affecting the main branch.

What is the benefit of having a copy of the last known state of the remote stored locally?
So that if you screw up the program, you don't have to be online to fix it.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I would probably collaborate over email. There would be more room for human error because we wouldn't
have a version control program to easily find changes. But there would be less complicated steps
in the act of sharing.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
I would want to make changes in a separate branch if I translating the program into French or Russian, or if I were experimenting
with new features. However, adding another branch makes things a little more complicated to access.
